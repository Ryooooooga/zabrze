name: Build

on: [push]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: rustup component add
        run: rustup component add rustfmt

      - name: cargo fmt --verbose --all -- --check
        run: cargo fmt --verbose --all -- --check

      - name: rustup component add
        run: rustup component add clippy

      - name: cargo clippy --verbose --all -- -D warnings
        run: cargo clippy --verbose --all -- -D warnings

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

  release:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-apple-darwin
          - x86_64-unknown-linux-gnu
        include:
          - target: x86_64-apple-darwin
            os: macOS-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest

    name: Release - ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    needs: [lint, build]
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable-${{ matrix.target }}
          default: true

      - name: Build
        run: cargo build --release

      - name: Rename an asset
        id: asset
        run: |
          EXECUTABLE="${GITHUB_REPOSITORY#*/}"
          ASSET="${EXECUTABLE}-${GITHUB_REF#refs/tags/}-${{ matrix.target }}.tar.gz"
          mv "./target/release/${EXECUTABLE}" "./${EXECUTABLE}"
          tar czfv "./${ASSET}" "${EXECUTABLE}"
          echo "::set-output name=asset::${ASSET}"
        shell: bash

      - name: Upload
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.asset.outputs.asset }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [release]
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v2

      - uses: katyo/publish-crates@v1
        with:
            registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
